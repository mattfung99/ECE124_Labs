<<<<<<< HEAD
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

--define inputs and outputs
entity MUX is port (
	hex_A		: in std_logic_vector(3 downto 0);
	hex_B		: in std_logic_vector(3 downto 0);
	sum		: in std_logic_vector(7 downto 0);
	selector	: in std_logic;
	output	: out std_logic_vector(7 downto 0)
);
end MUX;

architecture Behavioral of MUX is

begin
	with selector select
	output							<= hex_A & hex_B when "0",
											sum when "1";
=======
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

--define inputs and outputs
entity MUX is port (
	hex_A		: in std_logic_vector(3 downto 0);
	hex_B		: in std_logic_vector(3 downto 0);
	sum		: in std_logic_vector(7 downto 0);
	selector	: in std_logic;
	output	: out std_logic_vector(7 downto 0)
);
end MUX;

architecture Behavioral of MUX is

begin
	with selector select
	output							<= hex_A & hex_B when "0",
											sum when "1";
>>>>>>> cfef051bb3bf4a0568bc19b66a91f7a9f79c087f
end architecture Behavioral;